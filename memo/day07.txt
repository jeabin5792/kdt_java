day07 (java 5일차)

복습 -> 제어문(반복문, 기타제어문), 이중 제어문

0.복습
1) 연산자
	최 단 산 쉬 관 리 삼 대
-단한연산자
	+, -, ++, --, !
-산술연산자 
	+ - * / % 
	정수 + 정수 = 정수
	정수 + 실수 = 실수
	실수 + 실수 = 실수

-쉬프트 연산자(비트)
	좌시프트 A << B
	우시프트 A >> B
	Logical 쉬프트  A >>> B 부호 무시하고 오른쪽으로 이동

-관계연산자
	<, >, <=, >=, ==, !=
	결과는 boolean타입으로 나온다

-논리연산자
	&&, || ,!
	true & true
	
	&, |, ^
	1010 & 1011 -> 1010
	1010 | 1011 -> 1011
	1010 ^ 1011 -> 0001
	~1010 -> -10 -> -11

-삼항연산자
	조건식? 참일 때의 값: 거짓일때의 값

-대입연산자
	
2) 조건문
 	if문 , switch문
	if~else is~else문
	if(조건식1) {
		조건식1이 참일때;
	}else if(조건식2){
		조건식1이 거짓이고 조건식2가 참일때;
	}else{
		조건식1,2가 거짓일때;
	}

-swtich문
	switch(값) {
	case 값1:
		값1과 같을때;
		break;
	case 값2:
		값2와 갗을때;
		break;
	case 값3:
		값3과 같을때;
		break;
	default:
		위의 case의 값과 모두 같지 않을 때
		break;
	}

1. 반복문
	특정 조건을 만족할 때까지 코드 블록을 반복 실행
1)for문
	반복 횟수가 정해져 있을때
	for(초기식 ; 조건식 ; 증감식){
		조건식이 true일 동안 실행
	}

	초기식 : 처음에 설정할 값(변수) => int i=0;
	조건식 : 조건식의 결과가 true면 중괄호 영역안의 문장을 실행
		false면 중괄호 영역을 들어가지 않고 for문 탈출
	증감식 : 값을 얼마나 증감할지 정하는 식 => i++


2)while문



3)do~while문 
	while문과 동일하지만 최소 항번은 무조건 시행해야 할때 사용
	do{
		실행할 문장
	}while(조건식);


----------------------------------------------
[실습] 패키지 : homework07
//1~5번 클래스명 : Review01
1. 한개의 정수를 입력받라 짝수인지 홀수인지 출력하기(삼항연산자 이용)
2. 한개의 정수를 입력받아 양수, 음수, 0인지 출력하기(조건문)
3.나이를 입력받아서 다음 기준으로 출력하기
	0~12 : 어린이입니다
	13~19 : 청소년입니다
	20 이상 : 성인입니다
	
	나이립력 : 16
	현재 나이는 16살이고 청소년입니다

4.세 개의 정수를 입력받아서 가장 작은 숫자부터 큰 숫자 순으로 정렬히여 출력하기
	단 세 개의 정수는 모두 다른 숫자여야한다(중복값X)
	숫자 3개 입력 : 1 9 5
	정렬된 숫자  : 9 5 1

5. 사용자가 문자열을 입력받고 "X"만 입력했을 경우에만 종료 메세지 출력하고 그 외에는 입력한 문자열을 출력


//6번 클래스명 : AtmTest
6. ATM 메뉴에서 입금, 출금 , 잔액조회 하기
	[조건]
	초기 잔액은 10000원 으로 설정
	메뉴 선택에 따라 작업 수행
	종료시 프로그램 종료
	숫자(번호)로 입력받기 

	String msg="\nATM 기기의 메뉴중 번호를 선택하세요 : "
			+ "\n1. 잔액조회"
			+ "\n2. 입금"
			+ "\n3. 출금"
			+ "\n4. 종료"
			+ "\n선택 : "
			sys.out.print(msg);
	 	그 외의 번호를 입력하면 다시 선택하세요 출력 후 메뉴 보이기
		번호 입력시 해당 메세지만 출력
//7번 클래스명 : SingTest
7. 코인 노래방 시스템을 구현하는 개발자입니다.
사용자로부터 금액을 입력받아 부를 수 있는 곡 수와 잔돈을 계산하고, 음료를 마실 수 있는지 여부도 안내하는 프로그램

[요구사항]
사용자에게 곡 당 가격을 입력받는다.
반복문을 사용하여 사용자에게 금액을 계속 입력받는다.
단, 0을 입력하면 프로그램은 종료된다.
입력받은 금액으로 부를 수 있는 곡 수와 잔돈을 출력한다.
곡 수 : 금액 ÷ 곡당 가격
보너스 : 5곡당 1곡 보너스 (예: 5곡 → 6곡, 10곡 → 12곡)
잔돈 : 금액 % 곡당 가격
음료(100원)를 마시고 싶다면, 음료 가격을 차감하고 노래를 줄이는 방식으로 대체 제안을 출력한다.
사용자에게 "음료를 구매하시겠습니까?" 라고 묻고
YES를 입력하면 대체 결과를 출력 NO를 입력하면 원래 계산된 노래 수를 유지한다
금액이 부족할 경우, 노래를 부를 수 없다는 안내 메시지를 출력한다.
입력은 정수로 받되, nextInt()다음에 nextLine()사용 조합을 사용하여 입력 오류를 방지한다.
대소문자 구분해서 YES/NO 처리한다.
Scanner는 한 번만 생성하고 마지막에 .close()로 닫을 것

[입출력 예시]
곡 당 가격 입력: 300
금액 입력 (0 입력 시 종료): 1000
3곡을 부를 수 있으며 잔돈은 100원입니다
음료를 마시고 싶으면 3곡을 부를 수 있으며 잔돈은 0원입니다
음료를 구매하시겠습니까? (YES/NO): YES
음료를 구매하셨습니다.
3곡을 부를 수 있으며 잔돈은 0원입니다

금액 입력 (0 입력 시 종료): 900
3곡을 부를 수 있으며 잔돈은 0원입니다
음료를 마시고 싶으면 2곡을 부를 수 있으며 잔돈은 200원입니다
음료를 구매하시겠습니까? (YES/NO): YES
음료를 구매하셨습니다.
2곡을 부를 수 있으며 잔돈은 200원입니다

금액 입력 (0 입력 시 종료): 900
3곡을 부를 수 있으며 잔돈은 0원입니다
음료를 마시고 싶으면 2곡을 부를 수 있으며 잔돈은 200원입니다
음료를 구매하시겠습니까? (YES/NO): NO
음료를 구매하지 않았습니다.
금액 입력 (0 입력 시 종료): 0
























